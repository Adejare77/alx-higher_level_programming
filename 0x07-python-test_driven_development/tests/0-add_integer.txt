========================================
How to use doctest for 0-add_integer.py
========================================

This module tests for the function ``add_integer(a, b=98)``
and returns an integer value

Usage
======
The function ``ad_integer(...)`` returns the addition of the argument
a and b, equivalent to using the ``+`` operator

::
importing the 0-add

>>> add_integer = __import__('0-add_integer').add_integer

# Test function
=======
Numbers
=======
::
# When a and b are positive
        >>> add_integer(4, 0.3)
        4
        >>> add_integer(89, 4)
        93

::
# When a and b are negative
        >>> add_integer(-2.3, -8)
        -10

::
# When either a or b is positive or negative
        >>> add_integer(-4, 7)
        3
        >>> add_integer(89, -91.5)
        -2

# When only one element is given
        >>> add_integer(0.458)
        98
        >>> add_integer(-71)
        27


=============
Non-Numbers
=============
::
# When None value is given
        >>> add_integer(-911, None)
        Traceback (most recent call last):
        TypeError: b must be an integer
        >>> add_integer(None)
        Traceback (most recent call last):
        TypeError: a must be an integer

::
# When a or b is a string
        >>> add_integer("a", 89)
        Traceback (most recent call last):
        TypeError: a must be an integer
        >>> add_integer(-57, "b")
        Traceback (most recent call last):
        TypeError: b must be an integer
